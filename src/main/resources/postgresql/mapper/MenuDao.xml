<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.weaverloft.octopus.basic.menu.dao.MenuDao">

    <select id="getMenuInfo" parameterType="map" resultType="map">
        WITH RECURSIVE
            search_menu_info (menu_seq, parent_menu_seq, menu_nm, menu_url, is_use, reg_dt, udt_dt, del_dt, is_delete, menu_order_seq, LEVEL, PATH, CYCLE) AS
            (
                SELECT
                    m.menu_seq,
                    m.parent_menu_seq,
                    m.menu_nm,
                    m.menu_url,
                    m.is_use,
                    m.reg_dt,
                    m.udt_dt,
                    m.del_dt,
                    m.is_delete,
                    m.menu_order_seq,
                    0,
                    ARRAY[m.menu_seq],
                    false
                FROM
                    octopus.menu_info m
                WHERE
                    m.parent_menu_seq IS NULL
                UNION ALL
                SELECT
                    m.menu_seq,
                    m.parent_menu_seq,
                    m.menu_nm,
                    m.menu_url,
                    m.is_use,
                    m.reg_dt,
                    m.udt_dt,
                    m.del_dt,
                    m.is_delete,
                    m.menu_order_seq,
                    LEVEL + 1,
                    PATH || m.menu_seq,
                    m.menu_seq = ANY(PATH)
                FROM
                    octopus.menu_info m,
                    search_menu_info sm
                WHERE
                    m.parent_menu_seq = sm.menu_seq
                AND
                    NOT CYCLE
            )
            SELECT
                menu_seq,
                parent_menu_seq,
                menu_nm,
                menu_url,
                is_use,
                (SELECT
		         	COALESCE(array_to_string(array_agg(role_id), ','), '')
		         FROM
			         (SELECT
				        role_seq,
			         	role_id,
		         		(SELECT string_to_array(has_authority, ',') FROM octopus.menu_info WHERE menu_seq = search_menu_info.menu_seq) AS roleArray
		     		  FROM
		     		  	octopus.role_info) A
		         WHERE role_seq::varchar = any(roleArray)) AS has_authority,
                reg_dt,
                udt_dt,
                del_dt,
                is_delete,
                menu_order_seq,
                LEVEL,
                PATH,
                (select file_path from octopus.file_info where foreign_seq = menu_seq and type_depth1 = 'menu') AS file_path
            FROM
                search_menu_info
            WHERE
                is_delete = false
            <if test='menuSeq != null'>
            AND
                menu_seq = #{menuSeq}
            </if>
            ORDER BY
                PATH
    </select>

    <select id="getChildMenuSeq" parameterType="Integer" resultType="Integer">
        WITH RECURSIVE
            search_menu_info(menu_seq, LEVEL, PATH, CYCLE) AS
            (
                SELECT
                    m.menu_seq,
                    0,
                    ARRAY[m.menu_seq],
                    false
                FROM
                    octopus.menu_info m
                WHERE
                    m.parent_menu_seq IS null
                UNION ALL
                SELECT
                    m.menu_seq,
                    LEVEL + 1,
                    PATH || m.menu_seq,
                    m.menu_seq = ANY(PATH)
                FROM
                    octopus.menu_info m,
                    search_menu_info sm
                WHERE
                    m.parent_menu_seq = sm.menu_seq
                AND
                    NOT cycle
            )
            SELECT
                menu_seq
            FROM
                search_menu_info
            WHERE
                #{menuSeq} = any(path)
            ORDER BY
                path
    </select>

    <update id="deleteMenu" parameterType="list">
        UPDATE
            octopus.menu_info
        SET
            is_delete = true,
            del_dt = now()
        WHERE
            menu_seq IN
            <foreach collection="list" item="arr" open="(" close=")" separator=",">
                #{arr}
            </foreach>
    </update>

    <update id="updateMenu" parameterType="map">
        UPDATE
            octopus.menu_info
        SET
            <if test="menuNm != null and menuNm != ''">
                menu_nm = #{menuNm},
            </if>
            <if test="isUse != null and isUse != ''">
                is_use = #{isUse}::bool,
            </if>
            menu_url = #{menuUrl},
            has_authority = #{hasAuthority},
            udt_dt = now()
        WHERE
            menu_seq = #{menuSeq}::int4
    </update>

    <insert id="insertMenu" parameterType="map" useGeneratedKeys="true" keyProperty="menuSeq">
        INSERT INTO octopus.menu_info (
            parent_menu_seq,
            menu_nm,
            menu_url,
            is_use,
            <if test="hasAuthority != null and hasAuthority != ''">
                has_authority,
            </if>
            menu_order_seq
        ) VALUES (
            #{menuSeq}::int4,
            #{menuNm},
            #{menuUrl},
            #{isUse}::bool,
            <if test="hasAuthority != null and hasAuthority != ''">
            #{hasAuthority},
            </if>
            (SELECT coalesce(MAX(menu_order_seq),0)+1 FROM octopus.menu_info WHERE parent_menu_seq = #{menuSeq}::int4)
        )
    </insert>

</mapper>
