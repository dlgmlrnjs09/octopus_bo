<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.weaverloft.octopus.basic.member.dao.MemberDao">

    <!-- 기본 where절 -->
    <sql id="defaultWhere">
        <choose>
            <when test="!@org.springframework.util.CollectionUtils@isEmpty(memberSeqList)">
                AND member_seq IN
                <foreach collection="memberSeqList" item="arr" open="(" close=")" separator=",">
                    #{arr}
                </foreach>
            </when>
            <otherwise>
                <if test="searchKeyword != null and searchKeyword !=''">
                    <if test="searchType == 'memberId' ">
                        AND UPPER(member_id) LIKE '%'||UPPER(#{searchKeyword})||'%'
                    </if>
                    <if test="searchType == 'memberNm' ">
                        AND UPPER(member_nm) LIKE '%'||UPPER(#{searchKeyword})||'%'
                    </if>
                    <if test="searchType == 'memberEmail' ">
                        AND UPPER(member_email_full) LIKE '%'||UPPER(#{searchKeyword})||'%'
                    </if>
                </if>

                <if test="startDate !=null and startDate !='' and (endDate ==null or endDate =='')">
                    AND reg_dt <![CDATA[>=]]> #{startDate}::timestamp
                </if>

                <if test="endDate !=null and endDate !='' and (startDate ==null or startDate =='')">
                    AND reg_dt <![CDATA[<=]]> #{endDate}::timestamp + interval '1 day'
                </if>

                <if test="endDate !=null and endDate !='' and startDate !=null and startDate !='' ">
                    AND reg_dt <![CDATA[>=]]> #{startDate}::timestamp AND reg_dt <![CDATA[<]]> #{endDate}::timestamp + interval '1 day'
                </if>
            </otherwise>
        </choose>
    </sql>

    <select id="selectMemberCount" parameterType="com.weaverloft.octopus.basic.member.vo.MemberVo" resultType="int">
        SELECT
            count(*)
        FROM
            octopus.member_info
        WHERE
            1=1
        <include refid="defaultWhere"/>
    </select>

    <select id="selectMemberList" parameterType="com.weaverloft.octopus.basic.member.vo.MemberVo" resultType="com.weaverloft.octopus.basic.member.vo.MemberVo">
        SELECT
            A.*
        FROM
            (SELECT
                member_seq AS memberSeq,
                member_id AS memberId,
                member_nm AS memberNm,
                member_phone1 || '-' || member_phone2 || '-' || member_phone3 AS memberPhoneFull,
                member_birth AS memberBirth,
                member_addr1 AS memberAddr1,
                member_addr2 AS memberAddr2,
                member_addr_detail AS memberAddrDetail,
                member_zip_code AS memberZipCode,
                member_email_id AS memberEmailId,
                member_email_domain AS memberEmailDomain,
                member_email_full AS memberEmailFull,
                (SELECT role_name FROM octopus.role_info WHERE member_role = role_seq::varchar) AS memberRole,
                TO_CHAR(reg_dt, 'yyyy-mm-dd hh24:mi:ss') AS regDt
            FROM
                octopus.member_info
            WHERE
                1=1
            <include refid="defaultWhere"/>
            ORDER BY
                memberId DESC) A
        LIMIT
            #{pagingModel.pageSize}
        OFFSET
            (#{pagingModel.curPage} - 1) * #{pagingModel.pageSize}
    </select>

    <select id="selectExcelMemberList" parameterType="com.weaverloft.octopus.basic.member.vo.MemberVo" resultType="com.weaverloft.octopus.basic.member.vo.MemberVo">
        SELECT
            member_seq AS memberSeq,
            member_id AS memberId,
            member_nm AS memberNm,
            member_phone1 || '-' || member_phone2 || '-' || member_phone3 AS memberPhoneFull,
            member_birth AS memberBirth,
            member_zip_code AS memberZipCode,
            member_addr1 || ' ' || member_addr2 || ' ' || member_addr_detail AS memberAddrFull,
            member_email_full AS memberEmailFull,
--             CASE WHEN member_role = 'ADMIN' THEN '어드민'
--                  WHEN member_role = 'USER' THEN '일반 회원'
--                  WHEN member_role = 'MANAGER' THEN '매장 관리자'
--                  ELSE '-' END AS memberRole,
            (SELECT role_name FROM octopus.role_info WHERE member_role = role_seq::varchar) AS memberRole,
            TO_CHAR(reg_dt, 'yyyy-mm-dd hh24:mi:ss') AS regDt
        FROM
            octopus.member_info
        WHERE
            1=1
        <include refid="defaultWhere"/>
        ORDER BY
            member_id DESC
    </select>

    <select id="getMemberDetail" parameterType="com.weaverloft.octopus.basic.member.vo.MemberVo" resultType="com.weaverloft.octopus.basic.member.vo.MemberVo">
        SELECT
                m.member_seq AS memberSeq,
                m.member_id AS memberId,
                m.member_nm AS memberNm,
                m.member_phone1 AS memberPhone1,
                m.member_phone2 AS memberPhone2,
                m.member_phone3 AS memberPhone3,
                TO_CHAR(TO_DATE(m.member_birth, 'YYYYMMDD'), 'YYYY/MM/DD') AS memberBirth,
                m.member_addr1 AS memberAddr1,
                m.member_addr2 AS memberAddr2,
                m.member_addr_detail AS memberAddrDetail,
                m.member_addr1 || ' ' || member_addr2 || ' ' || member_addr_detail AS memberAddrFull,
                m.member_zip_code AS memberZipCode,
                m.member_email_id AS memberEmailId,
                m.member_email_domain AS memberEmailDomain,
                m.member_email_full AS memberEmailFull,
                r.role_id AS memberRole,
                TO_CHAR(m.reg_dt, 'yyyy-mm-dd hh24:mi:ss') AS regDt
        FROM
            octopus.member_info m LEFT OUTER JOIN octopus.role_info r ON m.member_role = r.role_seq::varchar
        WHERE
            member_seq = #{memberSeq}
    </select>

    <select id="getMemberRole" parameterType="com.weaverloft.octopus.basic.member.vo.MemberVo" resultType="com.weaverloft.octopus.basic.member.vo.MemberVo">
        SELECT
                m.member_seq AS memberSeq,
                m.member_id AS memberId,
                m.member_nm AS memberNm,
                m.member_pw AS memberPw,
                r.role_id AS memberRole
        FROM
            octopus.member_info m LEFT OUTER JOIN octopus.role_info r ON m.member_role = r.role_seq::varchar
        WHERE
            m.member_id = #{memberId}
    </select>

    <update id="updateMember" parameterType="com.weaverloft.octopus.basic.member.vo.MemberVo">
        UPDATE
            octopus.member_info
        SET
            member_nm = #{memberNm},
            member_phone1 = #{memberPhone1},
            member_phone2 = #{memberPhone2},
            member_phone3 = #{memberPhone3},
            <if test="memberZipCode != null and memberZipCode != '' and memberAddr1 != null and memberAddr1 != ''">
                member_zip_code = #{memberZipCode},
                member_addr1 = #{memberAddr1},
                member_addr2 = #{memberAddr2},
                member_addr_detail = #{memberAddrDetail},
            </if>
<!--            <if test="memberRole != null and memberRole != ''">-->
                member_role = #{memberRole},
<!--            </if>-->
            member_email_id = #{memberEmailId},
            member_email_domain = #{memberEmailDomain},
            member_email_full = #{memberEmailFull},
            udt_dt = now()
        WHERE
            member_seq = #{memberSeq}
    </update>

    <update id="updateMemberRole" parameterType="com.weaverloft.octopus.basic.member.vo.MemberVo">
        UPDATE
            octopus.member_info
        SET
        <if test="memberRole != null and memberRole != ''">
            member_role = #{memberRole},
        </if>
            udt_dt = now()
        WHERE
            member_seq = #{memberSeq}
    </update>

    <insert id="insertMember" parameterType="com.weaverloft.octopus.basic.member.vo.MemberVo">
        INSERT INTO octopus.member_info (
            member_seq,
            member_id,
            member_pw,
            member_phone1,
            member_phone2,
            member_phone3,
            member_email_id,
            member_email_domain,
            member_email_full
        ) VALUES (
            nextval('octopus.member_info_member_seq_seq'),
            #{memberId},
            #{memberPw},
            #{memberPhone1},
            #{memberPhone2},
            #{memberPhone3},
            #{memberEmailId},
            #{memberEmailDomain},
            #{memberEmailFull}
        )
    </insert>

    <select id="selectMemberIdList" resultType="String">
        SELECT
            DISTINCT member_id
        FROM
            octopus.member_info
    </select>

    <insert id="insertMemberDownloadLog" parameterType="map">
        INSERT INTO octopus.download_log (
            download_reg_id,
            download_log_ip,
            download_log_reason
        ) VALUES (
            #{downloadRegId},
            #{downloadLogIp},
            #{downloadLogReason}
        )
    </insert>

</mapper>
